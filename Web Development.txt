                                                                      WEB DEVELOPMENT 




Programming:- Programming (also known as coding) is the process of writing instructions for a device such as a computer or mobile device. 
We write these instructions with a programming language, which is then interpreted by the device. 
These sets of instructions may be referred to by various names, but program, computer program, application (app), and executable are a few popular names.
                       
                           World's first programmer is considered to be "Ada Lovelace".

Programming languages enable developers to write instructions for a device. 
Devices can only understand binary (1s and 0s), and for most developers that's not a very efficient way to communicate. 
Programming languages are the vehicle for communication between humans and computers.

A Fibonacci sequence is defined as a set of numbers such that each number is the sum of the two preceding ones,
starting from 0 and 1. The first 10 numbers following the Fibonacci sequence are 0, 1, 1, 2, 3, 5, 8, 13, 21 and 34.
A single instruction in a program is called a statement and will usually have a character or line spacing that marks 
where the instruction ends, or terminates. 

Browsers:-
Another crucial tool is the browser. Web developers rely on the browser to see how their code runs on the web. It's also used to display the visual elements of a web page that are written in the editor, like HTML.

Many browsers come with developer tools (DevTools) that contain a set of helpful features and information to help developers collect and capture important information about their application. For example: If a web page has errors, it's sometimes helpful to know when they occurred. DevTools in a browser can be configured to capture this information.

Intro to github:-
GitHub is a web platform for hosting code using Git version control. It lets developers track changes, collaborate, and manage projects. Code is stored in repositories, which can be public or private. Changes are saved as commits, and new features are developed in branches. Pull requests help review and merge changes. Users can report bugs or tasks through issues, and fork repositories to create independent copies. GitHub also offers Actions to automate tasks like testing or deployment.


Intro to git:-

* **Version Control**
  Tracks changes in files over time, allowing you to revert or review history.

* **Repository (Repo)**
  A project folder managed by Git, storing all files and history.

* **Git Init**
  Starts a new Git repository in a folder.

* **Clone**
  Copies an existing repo from a server to your local machine.

* **Add**
  Stages changes to be included in the next commit.

* **Commit**
  Records staged changes to the repository’s history with a message.

* **Status**
  Shows the current state of the working directory and staging area.

* **Log**
  Displays commit history.

* **Diff**
  Shows differences between files or commits.

* **Branch**
  Creates separate lines of development for new features or fixes.

* **Checkout**
  Switches between branches or restores files.

* **Merge**
  Combines changes from one branch into another.

* **Rebase**
  Moves or combines commits to create a cleaner history.

* **Remote**
  Links your local repo to a server like GitHub.

* **Push**
  Uploads local commits to a remote repo.

* **Pull**
  Downloads changes from a remote repo and merges them.

* **Stash**
  
 As web developers we should always have accessibility in mind. By having this focus from the beginning you will be well on your way to ensure everyone can access the pages you create. In this topic we'll learn about the tools that can help you ensure that your web assets are accessible and how to build with accessibility in mind.

TOOLS TO USE:-
1. Screen readers:
One of the best-known accessibility tools are screen readers.
A screen reader is assistive technology that interprets digital content (text, interface elements, etc.) and converts it into:

- Speech output (spoken words through speakers or headphones)

-Braille output (using a refreshable Braille display for those who are deaf-blind)

Screen readers help users navigate and interact with computers, smartphones, tablets, and websites without seeing the screen.

2. Zoom:Zoom
Another tool commonly used by people with vision impairments is zooming. The most basic type of zooming is static zoom, controlled through Control + plus sign (+) or by decreasing screen resolution. This type of zoom causes the entire page to resize, so using responsive design is important to provide a good user experience at increased zoom levels.
Another type of zoom relies on specialized software to magnify one area of the screen and pan, much like using a real magnifying glass.

3. Contrast checker:
Colors on web sites need to be carefully chosen to answer the needs of color-blind users or people who have difficulty seeing low-contrast colors.

4. Lighthouse:
In the developer tool area of your browser, you'll find the Lighthouse tool. This tool is important to get a first view of the accessibility (as well as other analysis) of a web site. While it's important not to rely exclusively on Lighthouse, a 100% score is very helpful as a baseline.

5. Color safe palettes:
People see the world in different ways, and this includes colors. When selecting a color scheme for your site, you should ensure it's accessible to all.

6. Use the correct HTML:
With CSS and JavaScript it's possible to make any element look like any type of control. <span> could be used to create a <button>, and <b> could become a hyperlink. While this might be considered easier to style, it conveys nothing to a screen reader. Use the appropriate HTML when creating controls on a page. If you want a hyperlink, use <a>. Using the right HTML for the right control is called making use of Semantic HTML.

7. Create a descriptive heading hierarchy:
Screen reader users rely heavily on headings to find information and navigate through a page. Writing descriptive heading content and using semantic heading tags are important for creating an easily navigable site for screen reader users.

8. Good link text:
Good link text briefly describes what's on the other side of the link.

What is ARIA?:
ARIA stands for Accessible Rich Internet Applications.
It’s a set of attributes you add to HTML to help assistive technologies (like screen readers) understand custom or complex web components that don’t have built-in HTML semantics.
You can use aria-label to describe the link when the format of the page doesn't allow you to. The description for widget could be set as

<a href="#" aria-label="Widget description">description</a>

9. Images:
It goes without saying screen readers are unable to automatically read what's in an image. Ensuring images are accessible doesn't take much work - it's what the alt attribute is all about. All meaningful images should have an alt to describe what they are. Images that are purely decorative should have their alt attribute set to an empty string: alt="". This prevents screen readers from unnecessarily announcing the decorative image.

10.The keyboard:
Some users are unable to use a mouse or trackpad, instead relying on keyboard interactions to tab from one element to the next. It's important for your web site to present your content in logical order so a keyboard user can access each interactive element as they move down a document. If you build your web pages with semantic markup and use CSS to style their visual layout, your site should be keyboard-navigable, but it's important to test this aspect manually.





